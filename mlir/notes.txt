
========================================================================================================================

# Tibs

export PATH=/home/pnguyen/code/one_off_code/mlir/llvm-project/build/bin/:$PATH
export LD_LIBRARY_PATH=/home/pnguyen/miniconda3/envs/mlir/lib:$LD_LIBRARY_PATH
export BUILD_DIR=/home/pnguyen/code/one_off_code/mlir/llvm-project/build
export PREFIX=/home/pnguyen/code/one_off_code/mlir/llvm-project/build

cd /home/pnguyen/code/one_off_code/mlir/tibs/
mkdir build
cd build

cmake -G Ninja .. -DMLIR_DIR=$PREFIX/lib/cmake/mlir -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit
ninja

cmake -G Ninja .. -DMLIR_DIR=$PREFIX/lib/cmake/mlir -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit && ninja && ./tibs-main/tibs-main

========================================================================================================================

# Misc. Links

https://mlir.llvm.org/docs/Tutorials/Toy/

========================================================================================================================

# Necessary Environment Variables

export LD_LIBRARY_PATH=/home/pnguyen/miniconda3/envs/tmp/lib:$LD_LIBRARY_PATH
export PATH=/home/pnguyen/code/one_off_code/mlir/llvm-project/build/bin/:$PATH

========================================================================================================================

# Rebuild MLIR https://mlir.llvm.org/getting_started/

pushd /home/pnguyen/code/one_off_code/mlir/llvm-project/build/ ; cmake -G Ninja ../llvm -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD="X86;NVPTX;AMDGPU" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON ; cmake --build . --target check-mlir ; popd

========================================================================================================================

# Create new standalone MLIR project

export PATH=/home/pnguyen/code/one_off_code/mlir/llvm-project/build/bin/:$PATH
export LD_LIBRARY_PATH=/home/pnguyen/miniconda3/envs/tmp/lib:$LD_LIBRARY_PATH
export BUILD_DIR=/home/pnguyen/code/one_off_code/mlir/llvm-project/build
export PREFIX=/home/pnguyen/code/one_off_code/mlir/llvm-project/build

cd /home/pnguyen/code/one_off_code/mlir/llvm-project/mlir/examples/paul
mkdir build
cd build

cmake -G Ninja .. -DMLIR_DIR=$PREFIX/lib/cmake/mlir -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit
cmake --build . --target check-standalone
ninja

# ./paullang-main/paullang-main
cmake -G Ninja .. -DMLIR_DIR=$PREFIX/lib/cmake/mlir -DLLVM_EXTERNAL_LIT=$BUILD_DIR/bin/llvm-lit && cmake --build . --target check-paullang && ninja && ./paullang-main/paullang-main

========================================================================================================================

# TODO

Figure out why our patterns aren't importing in examples/paul/include/PaulLang/PaulLangPasses.td
Figure out how to get a simple DRR example working. 
Get a simplle example working where we do a simple loop fusion via the affine dialect.

========================================================================================================================

Current

To run Ch6 Examples:

pushd /home/pnguyen/code/one_off_code/mlir/llvm-project/build/ ; cmake -G Ninja ../llvm -DLLVM_ENABLE_PROJECTS=mlir -DLLVM_BUILD_EXAMPLES=ON -DLLVM_TARGETS_TO_BUILD="X86;NVPTX;AMDGPU" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_ASSERTIONS=ON ; cmake --build . --target check-mlir ; popd ; printf "\n\n\n\n\n\n\n\n\n\n\n\n" ; /home/pnguyen/code/one_off_code/mlir/llvm-project/build/bin/toyc-ch6 /home/pnguyen/code/one_off_code/mlir/llvm-project/mlir/test/Examples/Toy/Ch6/affine-lowering.mlir -emit=mlir-llvm

===================

Get rid of all uses of "auto".
Make sure createLowerToLLVMPass is used.

"LLVM::LLVMType LLVMTypeConverter::convertFunctionSignature(" is what leads to the failure for PaulLang
It seems that the problem comes when we try to convert the args.
- I think that since everything in the Toy Language is inlined upfront, they don't have to deal with this case.
- Let's find out if there's an easy way to sollve this problem.

========================================================================================================================
